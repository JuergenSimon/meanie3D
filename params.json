{
  "name": "Meanie3d",
  "tagline": "meanie3D: mean-shift clustering in NetCDF data sets",
  "body": "# meanie3D                                                                          \r\n[//]: # {#mainpage}\r\n\r\nThis project provides a very generic implementation of mean-shift clustering on NetCDF data sets. \r\nThe data sets need to follow the \"CF-Metadata\":http://cfconventions.org. The mean-shift algorithm \r\nis a robust unsupervised clustering algorithm with a wide range of applications. Meanie3D provides \r\na multivariate implementation with no limits as to the number of variables that can be used in \r\nconstructing the Featurespace. \r\n\r\nThis software supports 2D as well as 3D data sets and comes with many configuration options. The code \r\nwas written as part of my efforts within \"OASE HErZ group\":http://www.herz-tb1.uni-bonn.de and contains \r\nsome modules that are specific to this application as a result. If interest is there I might remove all \r\nspecific components at one point. Meanie3D is implemented largely as a C++ template library with only a \r\nfew object files (mostly from the numerical recipes library) for performance reason and uses OpenMP for \r\nparallelisation. \r\n\r\nThe software package comes with a single command in the form of a python script 'meanie3D' which makes \r\nit very easy to use. The detection, tracking and post-processing steps (such as statistics, visualisation \r\nof tracks, source data and clusters as well as the track graph (a simple, graphical representation of \r\na tracking dictionary for obtaining detailed view on the history of individual clusters and tracks) are \r\nall controlled through a single configuration file. \r\n\r\n## License\r\n\r\nMeanie3D comes under [[MIT license]]. \r\n\r\n## Version\r\n\r\nThe latest stable version is v1.6.0. Versions are tagged.  \r\n\r\n## Build Instructions\r\n\r\n### Dependencies\r\n\r\nMeanie3D comes with a number of dependencies that need to be installed prior to attempting installation:\r\n\r\n* Boost 1.56 or better (http://www.boost.org)\r\n* FLANN 1.8.0 or better (http://www.cs.ubc.ca/research/flann/)\r\n* Blitz++ (http://sourceforge.net/projects/blitz/)\r\n* shapelib v1.3+ (http://shapelib.maptools.org)\r\n* NetCDF 4.2 or better (http://www.unidata.ucar.edu/software/netcdf/) *including* the netcdf4-C++ API\r\n* HDF5 (http://www.hdfgroup.org/HDF5/)\r\n* Python 2.5 or better (https://www.python.org)\r\n* numpy (try running @pip install numpy@ or download and install from http://www.numpy.org)\r\n* NetCDF4-python (try running @pip install netCDF4@ or download and install from http://unidata.github.io/netcdf4-python)\r\n\r\nOptionally, the following libraries may be used, if they are switched on with the appropriate flags:\r\n\r\n* Intel's Thread Building Blocks (-DWITH_TBB=1) version 4.3 (https://www.threadingbuildingblocks.org). This is mutually exclusive with OpenMP (-DWITH_OPENMP=1). \r\n* VTK 6.0 or better (http://www.vtk.org/VTK/resources/software.html)\r\n* OpenCV 2.4.x or better (http://opencv.org/downloads.html)\r\n\r\n### Compiler Prerequisites\r\n\r\nMeanie3D uses OpenMP by default (-DWITH_OPENMP=1) and requires an OpenMP enabled compiler, such as:\r\n\r\n* GNU 4.3 or better (Linux, Mac)\r\n* OpenMP/LLVM (Mac) - a clang implementation supporting OpenMP (http://clang-omp.github.io). Install this \r\ncompiler for optimal results on OSX. You can disable the OpenMP implementation adding the \r\nflags -DWITH_OPENMP=0 to your cmake call.\r\n\r\n### Obtain and compile Meanie3D\r\n\r\nMeanie3D uses CMAKE to generate makefiles. You can use CMAKE's abilities to generate IDE files if you prefer. Start \r\nby cloning the master branch (for an up-to date but possibly unstable version) or one of the stable releases.\r\n\r\n<pre>\r\ngit clone https://github.com/meteo-ubonn/meanie3D.git\r\ncd meanie3D\r\ngit submodule init\r\ngit submodule update radolan\r\n</pre>\r\n\r\nIf you want to download the OASE topology and mapdata file for visualisation, you can obtain this file by adding:\r\n<pre>\r\ngit clone http://git.meteo.uni-bonn.de/git/oase-mapdata\r\n</pre>\r\n\r\nCreate a build directory:\r\n\r\n<pre>\r\ncd ..\r\nmkdir meanie3D-make\r\ncd meanie3D-make\r\ncmake ../meanie3D\r\n</pre>\r\n\r\nIn order to switch optimizations on, tell cmake to use the release build type:\r\n\r\n<pre>\r\ncmake -DCMAKE_BUILD_TYPE=Release ../meanie3D\r\n</pre>\r\n\r\nNote that there have been some problems on Linux with aggressive optimization and NetCDF. Your mileage may vary. \r\nYou should try the release build in any event, since it speeds up performance a lot. If you observe unexpected \r\nproblems in reading/writing NetCDF files, you may have fallen victim to the problem and revert to standard build \r\n(leave the -DCMAKE_BUILD_TYPE=Release).  Once all dependencies are successfully resolved, install the product by \r\ncalling the following: \r\n\r\n<pre>\r\nmake install\r\n</pre>\r\n\r\nThere are a number of flags you can use to customize your installation:\r\n\r\n### VTK/ visualization code\r\n\r\nBecause of the heavyweight of the VTK package, the visualization code is disabled by default. If you have VTK6 \r\ninstalled, you can enable visualizations by adding the following flag to your cmake call:\r\n<pre>\r\n-D WITH_VTK=YES\r\n</pre>\r\n\r\nThis will result in some binaries and command line options for visualization to become available to you. \r\n\r\n### Add tests\r\n\r\nMeanie3D has a number of regression tests, that cover the core algorithms and collection classes. This will \r\nbecome important to you if you should decide to work on the core algorithms yourself. The tests are a good \r\nmethod of making sure you haven't broken anything critical. In order to enable unit tests, use the flag:\r\n<pre>\r\n-D WITH_TESTS=YES\r\n</pre>\r\n\r\nThe unit tests can then be run by calling\r\n<pre>\r\nmake test\r\n</pre>\r\n\r\n### Source code level documentation\r\n\r\nIn order to start developing your own Meanie3D code, it might be useful to have API documentation of the \r\nvarious classes in the project. If you have doxygen installed, you can call the following make command to \r\ncreate a browsable HTML documentation in doc/html (open the file index.html). \r\n<pre>\r\nmake docs\r\n</pre>\r\n\r\n## Frequently Asked Quesions \r\n\r\n### I'm having trouble compiling the code\r\nThe code has been tested on MacOS X and Suse Linux. Feel free to report problems using the \r\n\"New Issue\":http://git.meteo.uni-bonn.de/projects/meanie3d/issues/new link above. Please \r\nprepend \"[BUILD PROBLEM]:\" to your subject line. \r\n\r\n### NetCDF/HDF5 trouble\r\nVersions - make sure the NetCDF version is 4.2 or better. Also make certain that you have a HDF5 \r\ninstallation to match it. If you want to make sure, uninstall HDF5 and NetCDF and re-install them \r\nfrom source (HDF5 first, then NetCDF) Commonly there is a problem with the NetCDF C++ API - NetCDF \r\nhas a legacy C++ API from NetCDF3, which does not work with Meanie3D. Make sure you have the correct \r\none installed (http://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-cxx4-4.2.tar.gz) \r\n\r\n### CMAKE does not find your installed packages\r\nIf cmake has trouble locating packages you installed, check the files in the cmake_modules directory \r\nand adjust the search paths there instead of hardwiring paths into the CMakeLists.txt. If your system \r\nlayout is not considered and you have to make adjustments to the search paths, please send a copy of \r\nyour Find<XZY>.cmake file to juergen.simon@uni-bonn.de so I can include your changes in the next release \r\nand maybe save someone else the trouble.\r\n\r\n## More information\r\n\r\nCheck out the Main Wiki Page at http://git.meteo.uni-bonn.de/projects/meanie3d/wiki for details on how the \r\nmethod works, file formats and what the individual binaries do. \r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}